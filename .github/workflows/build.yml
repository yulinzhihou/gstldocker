name: build docker images

# 监听 push 事件。分支为 master
on:
  push:
    branches:
      [ master ]

# 工作流
jobs:
  job1:
    name: build gs server for cenos6.10
    # 运行所需要的虚拟机环境。它是必填字段
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%m%d')"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Debug current directory
        run: |
          pwd
          ls -al
      - name: Build Docker Image
        run: |
          docker buildx build \
            --file ./services/gsserver/Dockerfile \
            --platform linux/amd64 \
            --tag yulinzhihou/gs_server:latest \
            --tag yulinzhihou/gs_server:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server:latest \
            ./services/gsserver

      - name: show docker tags
        run: docker images -a

      - name: push image to dockerhub
        run: |
         docker push yulinzhihou/gs_server:latest && \
         docker push yulinzhihou/gs_server:${{ steps.date.outputs.today }}

      - name: Login to aliyun Docker registry
        run: |
          docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}

        
      - name: push image to aliyun Docker registry
        run: |
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server:latest && \
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server:${{ steps.date.outputs.today }}

  job2:
    name: build gs server for gs_server7.2009
    # 运行所需要的虚拟机环境。它是必填字段
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y%m%d%H%M')"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to aliyun Docker registry
        run: | 
          docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}
      - name: Debug current directory
        run: |
          pwd
          ls -al
      - name: Build Docker Image
        run: |
          docker buildx build \
            --file ./services/gsserver7/Dockerfile \
            --platform linux/amd64 \
            --tag yulinzhihou/gs_server7:latest \
            --tag yulinzhihou/gs_server7:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server7:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server7:latest \
            ./services/gsserver7

      - name: show docker tags
        run: docker images -a
    
      - name: push image to dockerhub
        run: |
          docker push yulinzhihou/gs_server7:latest && \
          docker push yulinzhihou/gs_server7:${{ steps.date.outputs.today }}

      - name: Login to aliyun Docker registry
        run: docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}

        
      - name: push image to aliyun Docker registry
        run: |
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server7:latest  && \
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server7:${{ steps.date.outputs.today }}

  job3:
    name: build gs server for gs_server8.2105
    # 运行所需要的虚拟机环境。它是必填字段
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y%m%d%H%M')"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to aliyun Docker registry
        run: |
          docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}

      - name: Debug current directory
        run: |
          pwd
          ls -al
      - name: Build Docker Image
        run: |
          docker buildx build \
            --file ./services/gsserver8/Dockerfile \
            --platform linux/amd64 \
            --tag yulinzhihou/gs_server8:latest \
            --tag yulinzhihou/gs_server8:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server8:${{ steps.date.outputs.today }} \
            --tag ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server8:latest \
            ./services/gsserver8
            
      - name: show docker tags
        run: docker images -a
    
      - name: push image to dockerhub
        run: |
          docker push yulinzhihou/gs_server8:latest  \
          docker push yulinzhihou/gs_server8:${{ steps.date.outputs.today }}

      - name: Login to aliyun Docker registry
        run: docker login --username=${{ secrets.ALIYUN_REGISTRY_USER }} --password=${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}

        
      - name: push image to aliyun Docker registry latest
        run: |
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server8:latest && \
          docker push ${{ secrets.ALIYUN_REGISTRY }}/yulinzhihou/gs_server8:${{ steps.date.outputs.today }}
  # job3:
  #   name: build gs mysql5.1

  # job4:
  #   name: build gs mysql5.7

  # job5:
  #   name: build gs mysql8.0

  # job6:
  #   name: build gs mysql8.1

  # job7:
  #   name: build gs mysql8.4

  # job8:
  #   name: build gs php 5.6

  # job9:
  #   name: build gs php 7.0
  # job10:
  #   name: build gs php 7.1
  # job11:
  #   name: build gs php 7.2
  # job12:
  #   name: build gs php 7.3
  # job13:
  #   name: build gs php 7.4
  # job14:
  #   name: build gs php 8.0
  # job15:
  #   name: build gs php 8.1
  # job16:
  #   name: build gs php 8.2
  # job17:
  #   name: build gs php 8.3
  # job18:
  #   name: build gs php 8.4
  # job19:
  #   name: build gs billing

  # job20:
  #   name: build gs nc clinet for frpc061

  # job21:
  #   name: build gs ns server for frps061

  # job22:
  #   name: build gs nginx for 1.24.0

  # job23:
  #   name: build gs caddy server

  # job24:
  #   name: build gs redis

  # job25:
  #   name: build gs rdkafka
  